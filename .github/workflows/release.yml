name: Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-release:
    name: Build release artifacts
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Build release
        run: cargo build --workspace --release

      - name: Package artifacts (linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          mkdir -p dist
          cp target/release/phantom-node dist/
          cp -r docs dist/docs
          tar -czf phantomcoin-${{ github.ref_name }}-linux-x86_64.tar.gz -C dist .

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: phantomcoin-${{ github.ref_name }}-linux-x86_64
          path: |
            *.tar.gz

  build-linux-aarch64:
    name: Build Linux ARM64 artifact
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Install aarch64 cross toolchain
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu
          rustup target add aarch64-unknown-linux-gnu
      - name: Build release (aarch64)
        run: cargo build --workspace --release --target aarch64-unknown-linux-gnu
      - name: Package artifact (linux aarch64)
        run: |
          mkdir -p dist
          cp target/aarch64-unknown-linux-gnu/release/phantom-node dist/
          cp -r docs dist/docs
          tar -czf phantomcoin-${{ github.ref_name }}-linux-aarch64.tar.gz -C dist .
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: phantomcoin-${{ github.ref_name }}-linux-aarch64
          path: |
            *.tar.gz

  build-macos-arm64:
    name: Build macOS ARM64 artifact
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Add target aarch64-apple-darwin
        run: rustup target add aarch64-apple-darwin
      - name: Build release (macOS arm64)
        run: cargo build --workspace --release --target aarch64-apple-darwin
      - name: Package artifact (macOS arm64)
        run: |
          mkdir -p dist
          cp target/aarch64-apple-darwin/release/phantom-node dist/
          cp -r docs dist/docs
          tar -czf phantomcoin-${{ github.ref_name }}-macos-arm64.tar.gz -C dist .
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: phantomcoin-${{ github.ref_name }}-macos-arm64
          path: |
            *.tar.gz

  build-macos-x86_64:
    name: Build macOS x86_64 artifact
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Add target x86_64-apple-darwin
        run: rustup target add x86_64-apple-darwin
      - name: Build release (macOS x86_64)
        run: cargo build --workspace --release --target x86_64-apple-darwin
      - name: Package artifact (macOS x86_64)
        run: |
          mkdir -p dist
          cp target/x86_64-apple-darwin/release/phantom-node dist/
          cp -r docs dist/docs
          tar -czf phantomcoin-${{ github.ref_name }}-macos-x86_64.tar.gz -C dist .
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: phantomcoin-${{ github.ref_name }}-macos-x86_64
          path: |
            *.tar.gz

  create-release:
    name: Create GitHub Release
    needs: [build-release, build-linux-aarch64, build-macos-arm64, build-macos-x86_64]
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/**/**.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
