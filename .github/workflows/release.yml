name: Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-release:
    name: Build release artifacts
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Build release
        run: cargo build --workspace --release

      - name: Package artifacts (linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          mkdir -p dist
          cp target/release/phantom-node dist/
          cp -r docs dist/docs
          tar -czf phantomcoin-${{ github.ref_name }}-linux-x86_64.tar.gz -C dist .

      - name: Package artifacts (macos)
        if: matrix.os == 'macos-latest'
        run: |
          mkdir -p dist
          cp target/release/phantom-node dist/
          cp -r docs dist/docs
          tar -czf phantomcoin-${{ github.ref_name }}-macos-universal.tar.gz -C dist .

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: phantomcoin-${{ github.ref_name }}-${{ matrix.os }}
          path: |
            *.tar.gz

  create-release:
    name: Create GitHub Release
    needs: build-release
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/**/**.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
